pipeline{
	agent any

	environment {
        	containerID = '' // Initializing containerID as an empty string
    }
	
	stages{
		stage('Code Repo'){
			steps{
				git url: "https://github.com/Yatingambhir85/jenkins-demo-task.git", branch: 'main'
			}
		}
		stage('Build'){
		      steps{
			      echo 'Building Image'
			      sh 'docker build -t my-practice-image -f first-pipeline-demo/Dockerfile .'
		      }
		}
		stage('Deploy'){
			steps{
				script{
				// Get the running container ID based on the local image name
                    		containerID = sh(script: 'docker ps -q --filter "ancestor=my-practice-image"')
				
                    		// If container is running, update it
                    		if (containerId) {
                     		   	echo "Updating the running container: ${env.containerID}"
                       		// Copy updated code to the running container (adjust the path accordingly)
                        		sh "docker cp . ${env.containerID}:/usr/share/nginx/html"
                    		}	 
				else {
                        	// If no container is running, start a new one
                        		echo "Starting a new container"
                        		sh "docker run -itd --name my-practice-container -p 8081:80 my-practice-image"
                    		}
				}
			}
		}
	}
}
